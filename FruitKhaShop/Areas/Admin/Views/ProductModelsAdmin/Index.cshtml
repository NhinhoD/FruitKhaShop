@model IEnumerable<FruitKhaShop.Models.ProductModel>

@{
    ViewData["Title"] = "Product List";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@Html.AntiForgeryToken()

<h1 class="text-center mb-4">Product List</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">+ Create New</a>
</p>

<table class="table table-bordered table-striped text-center align-middle">
    <thead class="table-dark">
        <tr>
            <th>Product Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Image</th>
            <th>Quantity</th>
            <th>Categories</th>
            <th>Weight</th>
            <th style="width: 150px;">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.ProductName</td>
                <td>@Html.Raw(item.Description)</td>
                <td>@($"{item.Price:N0} ₫")</td>
                <td>
                    <img src="@item.ImageUrl" alt="Image" width="80" height="80" class="img-thumbnail" />
                </td>
                <td>@item.Quantity</td>
                <td>
                    @if (item.ProductCategories != null && item.ProductCategories.Any())
                    {
                        @string.Join(", ", item.ProductCategories.Select(pc => pc.Category.CategoryName))
                    }
                    else
                    {
                        <span class="text-muted">No Category</span>
                    }
                </td>
                <td>@item.Weight Kg</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ProductId" class="btn btn-sm btn-warning">Edit</a>
                    <button type="button" class="btn btn-danger btn-sm"
                            onclick="confirmDelete('@item.ProductId', '@item.ProductName')">
                        Delete
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function confirmDelete(productId, productName) {
        Swal.fire({
            title: "Xác nhận xóa?",
            text: `Bạn có chắc muốn xóa sản phẩm "${productName}" không?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Vẫn xóa",
            cancelButtonText: "Hủy bỏ"
        }).then((result) => {
            if (result.isConfirmed) {
                // ✅ Gửi POST đến DeleteConfirmed
                fetch(`/Admin/ProductModelsAdmin/Delete/${productId}`, {
                    method: "POST",
                    headers: {
                        "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => {
                    if (response.ok) {
                        Swal.fire({
                            title: "Đã xóa!",
                            text: "Sản phẩm đã được xóa thành công.",
                            icon: "success",
                            timer: 1500,
                            showConfirmButton: false
                        }).then(() => location.reload());
                    } else {
                        Swal.fire("Lỗi!", "Không thể xóa sản phẩm này.", "error");
                    }
                })
                .catch(() => Swal.fire("Lỗi!", "Có lỗi khi xóa sản phẩm.", "error"));
            }
        });
    }
</script>
