@using FruitKhaShop.Models
@model List<CategoryModel>

@{
    ViewData["title"] = "Category";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

<div class="text-center">
    <h2 class="display-4">PRODUCT CATEGORY LIST</h2>
</div>

<div style="display: flex; justify-content: space-between; align-items: center; width:100%">
    <a asp-action="Create" asp-controller="CategoryModelsAdmin" class="btn btn-primary">
        <i class="fa fa-plus-circle"></i> Add New Category
    </a>
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered text-center align-middle">
        <thead class="table-primary">
            <tr>
                <th>#</th>
                <th>Product Category Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.CategoryId?.ToUpper().Substring(0, 6)</td>
                    <td>@item.CategoryName</td>
                    <td>
                        <a asp-action="Edit" asp-controller="CategoryModelsAdmin" asp-route-id="@item.CategoryId"
                           class="btn btn-warning btn-sm me-2">
                            <i class="fa fa-edit"></i>
                        </a>

                        <form asp-controller="CategoryModelsAdmin" asp-action="Delete"
                              asp-route-id="@item.CategoryId" method="post"
                              class="d-inline delete-form">
                            <button type="button" class="btn btn-danger btn-sm delete-btn" data-id="@item.CategoryId">
                                <i class="fa fa-trash"></i>
                            </button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            // ===== 1) Khi nhấn nút Delete ở từng hàng -> show SweetAlert, nếu OK submit form (form chứa antiforgery token)
            document.querySelectorAll('.delete-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const form = this.closest('form');

                    Swal.fire({
                        title: 'Bạn có chắc chắn?',
                        text: "Danh mục này sẽ bị xóa vĩnh viễn!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Xóa',
                        cancelButtonText: 'Hủy'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Gọi submit trên form (form do Razor render sẽ chứa __RequestVerificationToken)
                            form.submit();
                        }
                    });
                });
            });

            // ===== 2) Nếu TempData confirm (danh mục đang được dùng) -> hiển thị SweetAlert kiểm tra, nếu OK -> gửi POST force delete
            @if (TempData["ConfirmDelete"] != null)
            {
                // escape single quote
                var confirmText = TempData["ConfirmDelete"].ToString().Replace("'", "\\'");
                var categoryId = TempData["CategoryId"]?.ToString() ?? "";
                <text>
                    (function() {
                        Swal.fire({
                            title: 'Danh mục đang được sử dụng!',
                                text: '@Html.Raw(TempData["ConfirmDelete"])',
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonText: 'Vẫn xóa',
                            cancelButtonText: 'Hủy bỏ',
                            reverseButtons: true
                        }).then((result) => {
                            if (result.isConfirmed) {
                                // Tìm token (nếu có) trong trang
                                const tokenInput = document.querySelector('input[name="__RequestVerificationToken"]');
                                const token = tokenInput ? tokenInput.value : null;

                                // Tạo form POST động (action có confirm=true)
                                const form = document.createElement('form');
                                form.method = 'POST';
                                form.action = '/Admin/CategoryModelsAdmin/Delete?id=@categoryId&confirm=true';

                                if (token) {
                                    const t = document.createElement('input');
                                    t.type = 'hidden';
                                    t.name = '__RequestVerificationToken';
                                    t.value = token;
                                    form.appendChild(t);
                                }
                                // Nếu bạn muốn gửi Source field (không bắt buộc)
                                const s = document.createElement('input');
                                s.type = 'hidden';
                                s.name = 'Source';
                                s.value = 'Category';
                                form.appendChild(s);

                                document.body.appendChild(form);
                                form.submit();
                            }
                        });
                    })();
                </text>
            }

            // ===== 3) Hiển thị thông báo thành công / lỗi (chỉ khi Source == "Category")
            @if (TempData["SuccessMessage"] != null && TempData["Source"]?.ToString() == "Category")
            {
                <text>
                    Swal.fire({
                        title: 'Thành công!',
                        text: '@Html.Raw(TempData["SuccessMessage"])',
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false
                    });
                </text>
            }

            @if (TempData["ErrorMessage"] != null && TempData["Source"]?.ToString() == "Category")
            {
                <text>
                    Swal.fire({
                        title: 'Lỗi!',
                        text: '@Html.Raw(TempData["ErrorMessage"])',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                </text>
            }
        });
    </script>
}


